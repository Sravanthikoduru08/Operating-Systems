#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <string.h>
#include <unistd.h>

#define MSG_SIZE 256

struct message {
    long msg_type;
    char msg_text[MSG_SIZE];
};

int main() {
    key_t key = ftok("message_queue.c", 65);
    int msgid = msgget(key, 0666 | IPC_CREAT);
    if (msgid == -1) {
        perror("msgget failed");
        exit(1);
    }

    if (fork() == 0) {
        struct message msg;
        msg.msg_type = 1;
        snprintf(msg.msg_text, sizeof(msg.msg_text), "Hello from producer!");
        if (msgsnd(msgid, &msg, sizeof(msg.msg_text), 0) == -1) {
            perror("msgsnd failed");
            exit(1);
        }
        printf("Producer: Message sent\n");
        exit(0);
    } else {
        struct message msg;
        sleep(1);
        if (msgrcv(msgid, &msg, sizeof(msg.msg_text), 1, 0) == -1) {
            perror("msgrcv failed");
            exit(1);
        }
        printf("Consumer: Message received: %s\n", msg.msg_text);
        msgctl(msgid, IPC_RMID, NULL);
    }

    return 0;
}
